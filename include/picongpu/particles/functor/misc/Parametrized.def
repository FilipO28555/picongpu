/* Copyright 2021-2023 Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once


namespace picongpu
{
    namespace particles
    {
        namespace functor
        {
            namespace misc
            {
                /** Base functor type with custom parameters
                 *
                 * Enables passing custom bitwise-copyable parameters from the host side.
                 * It is useful when some data is not easily accessible on device side or from global variables.
                 * For example, data only available inside host-side calling code.
                 * This data can be set via static parameters() method.
                 * A user functor should access m_parameters on the device side.
                 *
                 * A user functor should inherit this one with proper parameters type.
                 * The resulting functor can be further wrapped using other helper types.
                 *
                 * @tparam T_Parameters parameters type, must be bitwise copyable
                 */
                template<typename T_Parameters>
                struct Parametrized;

            } // namespace misc
        } // namespace functor
    } // namespace particles
} // namespace picongpu

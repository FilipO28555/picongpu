/* Copyright 2022-2023 Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once


namespace picongpu
{
    namespace fields
    {
        namespace maxwellSolver
        {
            /** Calculate dispersion relation for the given field solver
             *
             * Dispersion relation is expressed in the following form:
             * f(absK) = 0, where absK = |k|.
             * Angular wave vector k = absK * direction, the direction and angular frequency omega are fixed and given
             * in the constructor.
             *
             * Implementor provides functions to calculate f(absK) and df(absK)/d(absK).
             * These functions will be used to numerically solve the dispersion relation for absK.
             *
             * See the general implementation in the .hpp file for interface requirements and more details.
             * General implementation follows physical dispersion relation in vacuum.
             *
             * @tparam T_FieldSolver field solver type
             */
            template<typename T_FieldSolver>
            class DispersionRelation;

        } // namespace maxwellSolver
    } // namespace fields
} // namespace picongpu

/* Copyright 2013-2023 Axel Huebl, Heiko Burau, Rene Widera, Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/fields/MaxwellSolver/FDTD/FDTD.def"
#include "picongpu/fields/differentiation/Curl.def"
#include "picongpu/fields/differentiation/Derivative.def"


namespace picongpu
{
    namespace fields
    {
        namespace maxwellSolver
        {
            namespace yee
            {
                //! Curl to apply to B (according to our Yee grid layout)
                using CurlB = differentiation::Curl<differentiation::Backward>;

                //! Curl to apply to E (according to our Yee grid layout)
                using CurlE = differentiation::Curl<differentiation::Forward>;
            } // namespace yee

            /** The classic Yee field solver, second-order in time and space
             *
             * Reference: K.S. Yee, Numerical solution of initial boundary value problems involving Maxwell's equations
             *            in isotropic media, IEEE Trans. Antennas Propagat. 14, 302-307 (1966)
             */
            using Yee = FDTD<yee::CurlE, yee::CurlB>;

        } // namespace maxwellSolver
    } // namespace fields
} // namespace picongpu

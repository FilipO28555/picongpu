/* Copyright 2013-2023 Heiko Burau, Rene Widera, Richard Pausch, Axel Huebl, Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/fields/incidentField/profiles/BaseParam.def"


namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
            namespace profiles
            {
                namespace defaults
                {
                    struct PolynomParam : public BaseParam
                    {
                        /** Beam waist: distance from the axis where the pulse intensity (E^2)
                         *              decreases to its 1/e^2-th part,
                         *              at the focus position of the laser
                         *
                         * AXIS_1 is directed according to POLARISATION_DIRECTION parameters.
                         * AXIS_2 is a cross product of the propagation direction and AXIS_1.
                         *
                         * For 2d simulations W0_AXIS_2_SI must be defined but its value has no effect.
                         *
                         * unit: meter
                         */
                        static constexpr float_64 W0_AXIS_1_SI = 4.246e-6;
                        static constexpr float_64 W0_AXIS_2_SI = W0_AXIS_1_SI;
                    };
                } // namespace defaults

                /** Wavepacket with a polynomial temporal intensity shape laser profiles tag
                 *
                 * Based on a wavepacket with Gaussian spatial envelope.
                 *
                 * @tparam T_Params class parameter to configure the plane wave profile,
                 *                  see members of defaults::PolynomParam for
                 *                  required members.
                 *                  The focus position should be at or near the generation surface as the
                 *                  laser equations are formulated for this case.
                 */
                template<typename T_Params = defaults::PolynomParam>
                struct Polynom;
            } // namespace profiles
        } // namespace incidentField
    } // namespace fields
} // namespace picongpu

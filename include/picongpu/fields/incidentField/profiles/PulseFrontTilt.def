/* Copyright 2013-2023 Anton Helm, Heiko Burau, Rene Widera, Richard Pausch,
 *                     Axel Huebl, Alexander Debus, Sergei Bastrakov
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#pragma once

#include "picongpu/fields/incidentField/profiles/GaussianPulse.def"


namespace picongpu
{
    namespace fields
    {
        namespace incidentField
        {
            namespace profiles
            {
                namespace defaults
                {
                    // All parameters are same as for GaussianPulse, plus one extra parameter
                    struct PulseFrontTiltParam : public GaussianPulseParam
                    {
                        /** The tilt angles from laser propagation direction
                         *
                         * AXIS_1 is directed according to POLARISATION_DIRECTION parameters.
                         * AXIS_2 is a cross product of the propagation direction and AXIS_1.
                         *
                         * Value 0 corresponds to no tilt.
                         *
                         * For 2d simulations TILT_AXIS_2_SI must be defined but its value has no effect.
                         *
                         * unit: degree, periodic in 360.0
                         *
                         * @{
                         */
                        static constexpr float_64 TILT_AXIS_1_SI = 0.0;
                        static constexpr float_64 TILT_AXIS_2_SI = 0.0;
                        /** *} */
                    };
                } // namespace defaults

                /** GaussianPulse laser profile with titled pulse front tag
                 *
                 * @tparam T_Params class parameter to configure the GaussianPulse with tilted front profile,
                 *                  see members of defaults::PulseFrontTiltParam
                 *                  for required members
                 */
                template<typename T_Params = defaults::PulseFrontTiltParam>
                using PulseFrontTilt = GaussianPulse<T_Params>;
            } // namespace profiles
        } // namespace incidentField
    } // namespace fields
} // namespace picongpu
